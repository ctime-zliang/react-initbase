{"version":3,"sources":["webpack:///./src/app/pages/RecordMgr/ListTable/index.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AAEA,MAAM,cAAmB;AAAA,EACxB,gBAAgB;AAAA,EAChB,iBAAiB;AAAA;AAElB,uBAAuB,OAA4B;AAClD,QAAM,CAAE,MAAM,SAAS,yBAA0B;AACjD,QAAM,CAAC,qBAAqB,0BAA0B,sDAAQ,CAAW;AAEzE,QAAM,aAAa,yDAAW,CAAC,CAAC,GAAG,aAA6B;AAC/D,MAAE;AACF,UAAM,QAAQ,IAAI,MAAM,SAAS,CAAE,SAAS;AAC5C,UAAM,YAAY,CAAC,uEAAkB,CAAC;AACtC,UAAM,WAAW,CAAC,uEAAkB,CAAC;AACrC,UAAM,WAAW,UAAU,uEAAkB,CAAC,eAAe;AAC7D,QAAI,MAAM;AACV,QAAI,UAAU;AACd,QAAI,WAAW;AACd,gBAAU;AACV,aAAO,MAAM;AAAA;AAEd,QAAI,UAAU;AACb,gBAAU;AACV,aAAO,MAAM;AAAA;AAEd,QAAI,UAAU;AACb,gBAAU;AACV,aAAO,KAAK;AAAA;AAEb,QAAI,CAAC,SAAS;AACb,YAAM;AAAA;AAEP,UAAM,MAAM,kBAAkB,SAAS,KAAK;AAC5C,YAAQ,IAAI,EAAE;AAAA,KAEZ;AAEH,MAAI,CAAC,YAAY,gBAAgB;AAChC,gBAAY,iBAAiB;AAC7B,gBAAY,gBAAgB,UAAU,uDAAe,CAAC,QAAQ,iCAAK,QAAL,CAAY;AAC1E,gBAAY,gBAAgB,QAAQ,uDAAe,CAAC,MAAM;AAAA;AAG3D,yDAAS,CAAC,MAAM;AACf,UAAM,eAAyB,KAC7B,OAAO,CAAC,MAAsB,UAAkB;AAChD,aAAO,KAAK,YAAY,OAAO,KAAK,OAAO,eAAe,KAAK,OAAO;AAAA,OAEtE,IAAI,CAAC,MAAsB,UAAkB;AAC7C,aAAO,KAAK,OAAO;AAAA;AAErB,2BAAuB;AAAA,KACrB,CAAC;AAEJ,SACC,wIACC,2EAAC,0CAAK,EAAN;AAAA,IACC,SAAS,YAAY,gBAAgB;AAAA,IACrC,YAAY;AAAA,IACZ,MAAK;AAAA,IACL;AAAA,KACI,YAAY,gBAAgB,QALjC;AAAA,IAMC,cAAc;AAAA,MACb,iBAAiB;AAAA,MACjB,UAAU;AAAA;AAAA;AAAA;AAMf,cAAc,eAAe;AAAA,EAC5B,MAAM;AAAA,EACN,SAAS;AAAA;AASK,2GAAK,CAAC,KAAK,cAAc","file":"updates/client.4036120b3c3cb6157ebc.hot-update.js","sourcesContent":["import React, { useCallback, useEffect, useState } from 'react'\r\nimport { Table } from 'antd'\r\nimport { listTableConfig } from './config'\r\nimport { IRecordMgrItem } from '@/store/record/config'\r\nimport { getQueryValueOfUrl } from '@/utils/utils'\r\n\r\nconst LocalConfig: any = {\r\n\tisSettedConfig: false,\r\n\tlistTableConfig: {},\r\n}\r\nfunction ListTableRoot(props: IListTableRootProps) {\r\n\tconst { list, loading, handleToggleRowSelect } = props\r\n\tconst [selectedRowKeysList, setSelectedRowKeysList] = useState<string[]>([])\r\n\r\n\tconst linkDetail = useCallback((e, itemData: IRecordMgrItem) => {\r\n\t\te.preventDefault()\r\n\t\tconst event = new Event('click', { bubbles: true })\r\n\t\tconst pageIndex = +getQueryValueOfUrl('pageIndex')\r\n\t\tconst pageSize = +getQueryValueOfUrl('pageSize')\r\n\t\tconst keywords = decodeURI(getQueryValueOfUrl('keywords') || '')\r\n\t\tlet str = `?from=list`\r\n\t\tlet hasFlag = false\r\n\t\tif (pageIndex) {\r\n\t\t\thasFlag = true\r\n\t\t\tstr += `pi=${pageIndex}`\r\n\t\t}\r\n\t\tif (pageSize) {\r\n\t\t\thasFlag = true\r\n\t\t\tstr += `ps=${pageSize}`\r\n\t\t}\r\n\t\tif (keywords) {\r\n\t\t\thasFlag = true\r\n\t\t\tstr += `k=${keywords}`\r\n\t\t}\r\n\t\tif (!hasFlag) {\r\n\t\t\tstr = ``\r\n\t\t}\r\n\t\tconst url = `/record/detail/${itemData.id}${str}`\r\n\t\tconsole.log(e.target)\r\n\t\t// window.open(url)\r\n\t}, [])\r\n\r\n\tif (!LocalConfig.isSettedConfig) {\r\n\t\tLocalConfig.isSettedConfig = true\r\n\t\tLocalConfig.listTableConfig.columns = listTableConfig.columns({ ...props, linkDetail })\r\n\t\tLocalConfig.listTableConfig.table = listTableConfig.table({})\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tconst selectedList: string[] = list\r\n\t\t\t.filter((item: IRecordMgrItem, index: number) => {\r\n\t\t\t\treturn item.isChcked && typeof item.key != 'undefined' && item.key != ''\r\n\t\t\t})\r\n\t\t\t.map((item: IRecordMgrItem, index: number) => {\r\n\t\t\t\treturn item.key || ''\r\n\t\t\t})\r\n\t\tsetSelectedRowKeysList(selectedList as Array<never>)\r\n\t}, [list])\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Table\r\n\t\t\t\tcolumns={LocalConfig.listTableConfig.columns}\r\n\t\t\t\tdataSource={list}\r\n\t\t\t\tsize=\"small\"\r\n\t\t\t\tloading={loading}\r\n\t\t\t\t{...LocalConfig.listTableConfig.table}\r\n\t\t\t\trowSelection={{\r\n\t\t\t\t\tselectedRowKeys: selectedRowKeysList,\r\n\t\t\t\t\tonChange: handleToggleRowSelect,\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t</>\r\n\t)\r\n}\r\nListTableRoot.defaultProps = {\r\n\tlist: [],\r\n\tloading: true,\r\n}\r\ninterface IListTableRootProps {\r\n\tlist: Array<IRecordMgrItem>\r\n\tloading: boolean\r\n\thandleDeleteItem: Function\r\n\thandleToggleRowSelect: Function\r\n}\r\n\r\nexport default React.memo(ListTableRoot)\r\n"],"sourceRoot":""}