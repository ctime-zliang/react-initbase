{"version":3,"sources":["webpack:///./src/app/pages/RecordMgr/Detail/detail.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA,MAAM,iBAAiB,CAAC,mBAAqE;AAC5F,QAAM,eAAe,KAAK,MAAM,KAAK,UAAU;AAC/C,SAAO,KAAK,uEAAsB,EAAE,QAAQ,CAAC,MAAc,UAAwB;AAClF,iBAAa,QAAsC,eAAe;AAAA;AAEnE,SAAO;AAAA;AAGR,0BAA0B,OAA+B;AACxD,QAAM,CAAE,OAAO,SAAS,wBAAwB,2BAA4B;AAC5E,QAAM,CAAC,UAAU,eAAe,sDAAQ,CAAC,uEAAsB;AAC/D,QAAM,CAAC,UAAU,eAAe,sDAAQ,CAAU;AAClD,QAAM,CAAC,YAAY,iBAAiB,sDAAQ,CAAU;AACtD,QAAM,CAAC,qBAAqB,0BAA0B,sDAAQ,CAAU;AACxE,QAAM,CAAC,oBAAoB,yBAAyB,sDAAQ,CAAU;AACtE,QAAM,CAAC,YAAY,iBAAiB,sDAAQ,CAAS;AACrD,QAAM,CAAC,QAAQ,aAAa,sDAAQ,CAAyB;AAE7D,QAAM,uBAAuB,CAAC,mBAA4C;AACzE,gBAAY,mBAAK,eAAe;AAAA;AAEjC,QAAM,iBAAiB,CAAC,mBAA4C;AACnE,gBAAY,eAAe;AAAA;AAG5B,QAAM,gBAAgB,CAAO,OAAe;AAC3C,QAAI;AACH,kBAAY;AACZ,oBAAc;AACd,YAAM,MAAM,MAAM,uBAAuB;AACzC,2BAAqB,IAAI;AACzB,oBAAc;AACd,6BAAuB;AAAA,aACf,OAAP;AACD,kBAAY;AACZ,oBAAc;AACd,kDAAW,CAAC,MAAM,MAAM;AACxB,oBAAc,MAAM;AAAA;AAAA;AAGtB,QAAM,iBAAiB,MAAY;AAClC,QAAI;AACH,4BAAsB;AACtB,YAAM,MAAM,MAAM,wBAAwB,QAAQ;AAClD,4BAAsB;AACtB,kDAAW,CAAC,QAAQ;AACpB,aAAO,WAAW,MAAM;AACvB,cAAM,YAAY,CAAC,uEAAkB,CAAC;AACtC,cAAM,WAAW,CAAC,uEAAkB,CAAC;AACrC,cAAM,WAAW,UAAU,uEAAkB,CAAC,SAAS;AACvD,YAAI,MAAM;AACV,YAAI,UAAU;AACd,YAAI,WAAW;AACd,iBAAO,cAAc;AACrB,oBAAU;AAAA;AAEX,YAAI,UAAU;AACb,iBAAO,GAAG,UAAU,MAAM,eAAe;AACzC,oBAAU;AAAA;AAEX,YAAI,UAAU;AACb,iBAAO,GAAG,UAAU,MAAM,eAAe;AACzC,oBAAU;AAAA;AAEX;AACA,gBAAQ,KAAK,CAAE,UAAU,YAAY;AAAA;AAAA,aAE9B,OAAP;AACD,kDAAW,CAAC,MAAM,MAAM;AACxB,4BAAsB;AAAA;AAAA;AAIxB,yDAAS,CAAC,MAAM;AACf,UAAM,YAAoC,MAAM;AAChD,QAAI,aAAa,UAAU,IAAI;AAC9B,gBAAU,UAAU;AACpB,oBAAc,UAAU;AACxB;AAAA;AAED,2BAAuB;AAAA,KACrB;AAEH,SACC,wIACC,2EAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACd,2EAAC,OAAD;AAAA,IAAK,WAAW,CAAC,iBAAiB,CAAC,WAAW,uBAAuB,IAAI,KAAK;AAAA,KAC7E,2EAAC,0CAAK,EAAN;AAAA,IAAO,SAAS;AAAA,IAAY,MAAK;AAAA,OAElC,2EAAC,iEAAQ,EAAT;AAAA,IAAU;AAAA,IAAoB;AAAA,MAC9B,2EAAC,yCAAI,EAAL;AAAA,IAAM,WAAW,CAAC,eAAe,aAAa,qBAAqB,IAAI,KAAK;AAAA,MAC5E,2EAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACd,2EAAC,2CAAM,EAAP;AAAA,IAAQ,MAAK;AAAA,IAAU,UAAU;AAAA,IAAqB,SAAS;AAAA,IAAoB,SAAS;AAAA,KAAgB;AAAA;AAQjH,iBAAiB,eAAe;AAMjB,0HAAO,CACrB,CAAC,QAAgC,IAAI,aAAa;AACjD,SAAO,kCACH,WACA,MAAM,2EAAsB;AAAtB,GAGX,mBACI,iDAAM,GAET,iBAAiB","file":"updates/client.26270ab8f47ec3572ad3.hot-update.js","sourcesContent":["import React, { FC, useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { message as messageTips } from 'antd'\r\nimport { Spin, Button, Alert } from 'antd'\r\nimport { REDUCER_RECORD_REDUCER } from '@/store/record/config'\r\nimport * as action from '@/store/record/action'\r\nimport EditForm from '@/pages/RecordMgr/EditForm'\r\nimport { baseEditFormDataConfig, BaseEditFormDataConfigType, IBaseEditFormDataConfig } from '../EditForm/config'\r\nimport './index.less'\r\nimport { RouteComponentProps } from 'react-router'\r\nimport { getQueryValueOfUrl } from '@/utils/utils'\r\n\r\nconst filterFormData = (paramsFormData: IBaseEditFormDataConfig): IBaseEditFormDataConfig => {\r\n\tconst copyFormData = JSON.parse(JSON.stringify(paramsFormData))\r\n\tObject.keys(baseEditFormDataConfig).forEach((item: string, index: number): void => {\r\n\t\tcopyFormData[item as BaseEditFormDataConfigType] = paramsFormData[item as BaseEditFormDataConfigType]\r\n\t})\r\n\treturn copyFormData\r\n}\r\n\r\nfunction RecordDetailRoot(props: IRecordDetailRootProps) {\r\n\tconst { match, history, fetchItemRequestAction, updateItemRequestAction } = props\r\n\tconst [formData, setFormData] = useState(baseEditFormDataConfig)\r\n\tconst [isExists, setIsExists] = useState<boolean>(true)\r\n\tconst [isSpinShow, setIsSpanShow] = useState<boolean>(true)\r\n\tconst [isSubmitBtnDisabled, setIsSubmitBtnDisabled] = useState<boolean>(true)\r\n\tconst [isSubmitBtnLoading, setIsSubmitBtnLoading] = useState<boolean>(false)\r\n\tconst [errMessage, setErrMessage] = useState<string>(``)\r\n\tconst [itemId, setItemId] = useState<string | number | null>(null)\r\n\r\n\tconst handleUpdateFormData = (paramsFormData: IBaseEditFormDataConfig) => {\r\n\t\tsetFormData({ ...filterFormData(paramsFormData) })\r\n\t}\r\n\tconst updateFormData = (paramsFormData: IBaseEditFormDataConfig) => {\r\n\t\tsetFormData(filterFormData(paramsFormData))\r\n\t}\r\n\r\n\tconst fetchItemData = async (id: string) => {\r\n\t\ttry {\r\n\t\t\tsetIsExists(true)\r\n\t\t\tsetIsSpanShow(true)\r\n\t\t\tconst res = await fetchItemRequestAction(id)\r\n\t\t\thandleUpdateFormData(res.data)\r\n\t\t\tsetIsSpanShow(false)\r\n\t\t\tsetIsSubmitBtnDisabled(false)\r\n\t\t} catch (error) {\r\n\t\t\tsetIsExists(false)\r\n\t\t\tsetIsSpanShow(false)\r\n\t\t\tmessageTips.error(error.msg)\r\n\t\t\tsetErrMessage(error.msg)\r\n\t\t}\r\n\t}\r\n\tconst submitItemData = async () => {\r\n\t\ttry {\r\n\t\t\tsetIsSubmitBtnLoading(true)\r\n\t\t\tconst res = await updateItemRequestAction(itemId, formData)\r\n\t\t\tsetIsSubmitBtnLoading(false)\r\n\t\t\tmessageTips.success(`Updated Success`)\r\n\t\t\twindow.setTimeout(() => {\r\n\t\t\t\tconst pageIndex = +getQueryValueOfUrl('pi')\r\n\t\t\t\tconst pageSize = +getQueryValueOfUrl('ps')\r\n\t\t\t\tconst keywords = decodeURI(getQueryValueOfUrl('wd') || '')\r\n\t\t\t\tlet str = ``\r\n\t\t\t\tlet hasFlag = false\r\n\t\t\t\tif (pageIndex) {\t\t\t\t\t\r\n\t\t\t\t\tstr += `?pageIndex=${pageIndex}`\r\n\t\t\t\t\thasFlag = true\r\n\t\t\t\t}\r\n\t\t\t\tif (pageSize) {\r\n\t\t\t\t\tstr += `${hasFlag ? '&' : '?'}pageSize=${pageSize}`\r\n\t\t\t\t\thasFlag = true\r\n\t\t\t\t}\r\n\t\t\t\tif (keywords) {\t\t\t\t\t\r\n\t\t\t\t\tstr += `${hasFlag ? '&' : '?'}keywords=${keywords}`\r\n\t\t\t\t\thasFlag = true\r\n\t\t\t\t}\r\n\t\t\t\tdebugger\r\n\t\t\t\thistory.push({ pathname: '/record' + str })\r\n\t\t\t})\r\n\t\t} catch (error) {\r\n\t\t\tmessageTips.error(error.msg)\r\n\t\t\tsetIsSubmitBtnLoading(false)\r\n\t\t}\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tconst urlParams: { [key: string]: any } = match.params\r\n\t\tif (urlParams && urlParams.id) {\r\n\t\t\tsetItemId(urlParams.id)\r\n\t\t\tfetchItemData(urlParams.id)\r\n\t\t\treturn\r\n\t\t}\r\n\t\tsetIsSubmitBtnDisabled(false)\r\n\t}, [])\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"detail-container\">\r\n\t\t\t\t<div className={['error-wrapper', !isExists ? 'error-wrapper-show' : ''].join(' ')}>\r\n\t\t\t\t\t<Alert message={errMessage} type=\"error\" />\r\n\t\t\t\t</div>\r\n\t\t\t\t<EditForm formData={formData} updateFormData={updateFormData} />\r\n\t\t\t\t<Spin className={['detail-spin', isSpinShow ? 'detail-spin-show' : ''].join(' ')} />\r\n\t\t\t\t<div className=\"submit-wrapper\">\r\n\t\t\t\t\t<Button type=\"primary\" disabled={isSubmitBtnDisabled} loading={isSubmitBtnLoading} onClick={submitItemData}>\r\n\t\t\t\t\t\tSubmit\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t)\r\n}\r\nRecordDetailRoot.defaultProps = {}\r\ninterface IRecordDetailRootProps extends RouteComponentProps {\r\n\tfetchItemRequestAction: Function\r\n\tupdateItemRequestAction: Function\r\n}\r\n\r\nexport default connect(\r\n\t(state: { [key: string]: any } = {}, ownProps) => {\r\n\t\treturn {\r\n\t\t\t...ownProps,\r\n\t\t\t...state[REDUCER_RECORD_REDUCER],\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t...action,\r\n\t}\r\n)(RecordDetailRoot)\r\n"],"sourceRoot":""}